var App=new Vue({el:"#app",delimiters:["[[","]]"],data:()=>({cardTitleInput:"",cards:[],currentCard:{},tasks:[],taskContent:"",currentTask:{}}),computed:{filteredCards(){var t=this;return 0===this.cardTitleInput?this.cards:this.cards.map(function(a){return{name:a.name,cardColor:a.cardColor,items:a.items.filter(function(a){return a.includes(t.search)})}})}},methods:{saveTaskBtn(){document.getElementById("saveTask").click()},getHeaders(){var t=null;if(document.cookie&&""!=document.cookie)for(var a=document.cookie.split(";"),e=0;e<a.length;e++){var s=a[e].trim();if(s.substring(0,name.length+1)===name+"="){t=decodeURIComponent(s.substring(name.length+1));break}}return t},newHeaders(){return axios.defaults.xsrfHeaderName="X-CSRFToken",{"X-CSRFTOKEN":this.getHeaders("csrftoken")}},removeCard(t){this.cards.splice(this.cards.indexOf(t),1)},clearSearchField(){this.cardTitleInput=""},async getCards(){await axios.get("http://localhost:8000/api/v1/cards/all").then(t=>{this.cards=t.data})},async postCards(){this.cardTitleInput.length?(await axios.post("http://localhost:8000/api/v1/cards/all/?format=json",{title:this.cardTitleInput},this.newHeaders()),this.cardTitleInput="",await this.getCards()):alert("Your card title is empty")},callUpdateCardTitle(t){this.cardTitleInput=t.title,this.currentCard=t},async updateCard(){await axios.put(`http://localhost:8000/api/v1/cards/updelete/${this.currentCard.id}/`,{title:this.cardTitleInput},this.newHeaders()),this.cardTitleInput="",await this.getCards()},callDeleteCardTitle(t){this.currentCard=t},async deleteCard(){await axios.delete(`http://localhost:8000/api/v1/cards/updelete/${this.currentCard.id}/`,{},this.newHeaders()),this.cardTitleInput="",await this.getCards()},getTasks(){axios.get("http://localhost:8000/api/v1/tasks/all").then(t=>{this.tasks=t.data})},callCardTasks(t){this.currentCard=t,this.taskContent=""},async postTasks(){context={card:this.currentCard.id,counteudo:this.taskContent},await axios.post("http://localhost:8000/api/v1/tasks/all/?format=json",{card:this.currentCard.id,conteudo:this.taskContent},this.newHeaders()),await this.getTasks()},callUpdateCardTask(t){this.currentTask=t,this.taskContent=t.conteudo},async updateTask(){await axios.put(`http://localhost:8000/api/v1/tasks/updelete/${this.currentTask.id}/`,{card:this.currentTask.card,conteudo:this.taskContent},this.newHeaders()),await this.getTasks()},async deleteTask(t){await axios.delete(`http://localhost:8000/api/v1/tasks/updelete/${t.id}/`,{},this.newHeaders()),await this.getTasks()}},created(){this.getCards(),this.getTasks()}});